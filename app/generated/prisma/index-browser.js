
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  fname: 'fname',
  lname: 'lname',
  username: 'username',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.CaseScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  fname: 'fname',
  lname: 'lname',
  phoneNumber: 'phoneNumber',
  personalEmail: 'personalEmail',
  date: 'date',
  position: 'position',
  payScale: 'payScale',
  entitlement: 'entitlement',
  supervisor: 'supervisor',
  reasonForRequest: 'reasonForRequest',
  typesOfPayIssue: 'typesOfPayIssue',
  typesOfDisciplinaryAction: 'typesOfDisciplinaryAction',
  notes: 'notes',
  progress: 'progress',
  documents: 'documents',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  owner: 'owner',
  admin: 'admin',
  steward: 'steward'
};

exports.Position = exports.$Enums.Position = {
  Nurse: 'Nurse',
  MAS: 'MAS',
  FMS: 'FMS',
  EMS: 'EMS',
  HIMS: 'HIMS',
  Doctor: 'Doctor',
  Tech: 'Tech',
  LPN: 'LPN',
  Social_Work: 'Social_Work',
  Dentist: 'Dentist',
  Dental_Assistant: 'Dental_Assistant',
  Other: 'Other'
};

exports.PayScale = exports.$Enums.PayScale = {
  GS: 'GS',
  WG: 'WG',
  VN: 'VN'
};

exports.Entitlement = exports.$Enums.Entitlement = {
  Title_38: 'Title_38',
  Title_5: 'Title_5',
  Hybrid: 'Hybrid',
  Unknown: 'Unknown'
};

exports.ReasonForRequest = exports.$Enums.ReasonForRequest = {
  Fact_Finding: 'Fact_Finding',
  Pay_Issues: 'Pay_Issues',
  Performance_Appraisal: 'Performance_Appraisal',
  EEO: 'EEO',
  Grievance: 'Grievance',
  Change_in_Working_Condition: 'Change_in_Working_Condition',
  Reasonable_Accommodation_RA: 'Reasonable_Accommodation_RA',
  Workers_Compensation: 'Workers_Compensation',
  Disciplinary_Action: 'Disciplinary_Action',
  Other: 'Other'
};

exports.PayIssueType = exports.$Enums.PayIssueType = {
  Indebtedness: 'Indebtedness',
  Pay_check: 'Pay_check'
};

exports.DisciplinaryActionType = exports.$Enums.DisciplinaryActionType = {
  Verbal_Counseling: 'Verbal_Counseling',
  Written_Counseling: 'Written_Counseling',
  Admonishment: 'Admonishment',
  Reprimand: 'Reprimand',
  Proposed_Suspension: 'Proposed_Suspension',
  Proposed_Removal: 'Proposed_Removal'
};

exports.Progress = exports.$Enums.Progress = {
  Not_Started: 'Not_Started',
  In_Progress: 'In_Progress',
  Meeting_Set: 'Meeting_Set',
  Awaiting_Response: 'Awaiting_Response',
  Esculated: 'Esculated',
  Complete: 'Complete'
};

exports.Prisma.ModelName = {
  User: 'User',
  Case: 'Case'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
